# CS110 Assignment 4 Makefile

# Compile parallel jobs by default. Especially with ASan, there are a lot of
# files.
MAKEFLAGS := --jobs=$(shell nproc) --output-sync=target

PROGS = stsh
EXTRA_PROGS = spin split int tstp fpe conduit
PROGS_ASAN = $(patsubst %,%_asan,$(PROGS))
CXX = clang++-10

LIB_SRC = stsh-job-list.cc stsh-job.cc stsh-process.cc stsh-parse-utils.cc \
          stsh-parser/scanner.cc stsh-parser/parser.cc stsh-parser/stsh-parse.cc stsh-parser/stsh-readline.cc

WARNINGS = -Wall -pedantic -Wno-unused-function -Wno-vla-extension -Wno-sign-compare
DEPS = -MMD -MF $(@:.o=.d)
DEFINES =
INCLUDES = -I/afs/ir/class/cs110/local/include

CXXFLAGS = -g -fPIE -fno-limit-debug-info $(WARNINGS) -O0 -std=c++20 $(DEFINES) $(INCLUDES)
LDFLAGS = -lreadline -ll

LIB_OBJ = $(patsubst %.cc,%.o,$(patsubst %.S,%.o,$(LIB_SRC)))
LIB_DEP = $(patsubst %.o,%.d,$(LIB_OBJ))
LIB = stsh.a

PROGS_SRC = $(patsubst %,%.cc,$(PROGS))
PROGS_OBJ = $(patsubst %.cc,%.o,$(patsubst %.S,%.o,$(PROGS_SRC)))
PROGS_DEP = $(patsubst %.o,%.d,$(PROGS_OBJ))

EXTRA_PROGS_SRC = $(patsubst %,%.cc,$(EXTRA_PROGS))
EXTRA_PROGS_OBJ = $(patsubst %.cc,%.o,$(patsubst %.S,%.o,$(EXTRA_PROGS_SRC)))
EXTRA_PROGS_DEP = $(patsubst %.o,%.d,$(EXTRA_PROGS_OBJ))

PROGS_ASAN_OBJ = $(patsubst %.o,%_asan.o,$(PROGS_OBJ) $(LIB_OBJ))
PROGS_ASAN_DEP = $(patsubst %.o,%.d,$(PROGS_ASAN_OBJ))

all: $(PROGS) $(EXTRA_PROGS) $(PROGS_ASAN)

stsh-parser/scanner.cc stsh-parser/parser.cc stsh-parser/stsh-parse.cc stsh-parser/stsh-readline.cc: stsh-parser-build
stsh-parser-build:
	$(MAKE) -C stsh-parser

stsh-parser/parser.o: stsh-parser-build stsh-parser/parser.cc
stsh-parser/scanner.o: stsh-parser-build stsh-parser/scanner.cc

stsh: %:%.o $(LIB)
	$(CXX) $^ $(LDFLAGS) -o $@

$(LIB): $(LIB_OBJ)
	rm -f $@
	ar r $@ $^
	ranlib $@

$(EXTRA_PROGS): %:%.o
	$(CXX) $^ $(LDFLAGS) -o $@

$(PROGS_ASAN_OBJ): %_asan.o:%.cc
	$(CXX) $(CXXFLAGS) -fsanitize=address -c -o $@ $<
$(PROGS_ASAN): $(PROGS_ASAN_OBJ)
	$(CXX) $^ $(LDFLAGS) -o $@ -fsanitize=address

tidy::
	$(info "Checking style for $(PROGS_SRC)...")
	clang-tidy $(PROGS_SRC)

clean::
	$(MAKE) -C stsh-parser clean
	rm -f $(PROGS) $(PROGS_OBJ) $(PROGS_DEP)
	rm -f $(EXTRA_PROGS) $(EXTRA_PROGS_OBJ) $(EXTRA_PROGS_DEP)
	rm -f $(PROGS_ASAN) $(PROGS_ASAN_OBJ) $(PROGS_ASAN_DEP)
	rm -f $(LIB) $(LIB_DEP) $(LIB_OBJ)

spartan:: clean
	$(MAKE) -C stsh-parser spartan
	\rm -fr *~

.PHONY: all clean spartan

-include $(LIB_DEP) $(PROGS_DEP) $(EXTRA_PROG_DEP) $(PROGS_ASAN_DEP)

